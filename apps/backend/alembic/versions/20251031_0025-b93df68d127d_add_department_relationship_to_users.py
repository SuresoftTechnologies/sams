"""add department relationship to users

Revision ID: b93df68d127d
Revises: fix_date_types_001
Create Date: 2025-10-31 00:25:46.449200

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b93df68d127d'
down_revision: Union[str, Sequence[str], None] = 'fix_date_types_001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('parent_id', sa.String(length=36), nullable=True),
    sa.Column('manager_id', sa.String(length=36), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], name=op.f('fk_departments_manager_id_users')),
    sa.ForeignKeyConstraint(['parent_id'], ['departments.id'], name=op.f('fk_departments_parent_id_departments')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_departments')),
    sa.UniqueConstraint('name', name=op.f('uq_departments_name'))
    )
    op.create_index(op.f('ix_departments_code'), 'departments', ['code'], unique=True)
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    op.create_index(op.f('ix_departments_parent_id'), 'departments', ['parent_id'], unique=False)
    op.create_table('asset_attachments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('asset_id', sa.String(length=36), nullable=False),
    sa.Column('uploaded_by', sa.String(length=36), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('file_size', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], name=op.f('fk_asset_attachments_asset_id_assets'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], name=op.f('fk_asset_attachments_uploaded_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_asset_attachments'))
    )
    op.create_index(op.f('ix_asset_attachments_asset_id'), 'asset_attachments', ['asset_id'], unique=False)
    op.create_index(op.f('ix_asset_attachments_id'), 'asset_attachments', ['id'], unique=False)
    op.create_index(op.f('ix_asset_attachments_uploaded_by'), 'asset_attachments', ['uploaded_by'], unique=False)
    op.create_table('approvals',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('workflow_id', sa.String(length=36), nullable=False),
    sa.Column('approver_id', sa.String(length=36), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['approver_id'], ['users.id'], name=op.f('fk_approvals_approver_id_users')),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('fk_approvals_workflow_id_workflows'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_approvals'))
    )
    op.create_index(op.f('ix_approvals_approver_id'), 'approvals', ['approver_id'], unique=False)
    op.create_index(op.f('ix_approvals_id'), 'approvals', ['id'], unique=False)
    op.create_index(op.f('ix_approvals_status'), 'approvals', ['status'], unique=False)
    op.create_index(op.f('ix_approvals_workflow_id'), 'approvals', ['workflow_id'], unique=False)
    op.create_table('workflow_history',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('workflow_id', sa.String(length=36), nullable=False),
    sa.Column('changed_by', sa.String(length=36), nullable=False),
    sa.Column('from_status', sa.String(length=20), nullable=True),
    sa.Column('to_status', sa.String(length=20), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], name=op.f('fk_workflow_history_changed_by_users')),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('fk_workflow_history_workflow_id_workflows')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_history'))
    )
    op.create_index(op.f('ix_workflow_history_created_at'), 'workflow_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_workflow_history_id'), 'workflow_history', ['id'], unique=False)
    op.create_index(op.f('ix_workflow_history_workflow_id'), 'workflow_history', ['workflow_id'], unique=False)

    # Preserve critical indexes created in previous migrations
    # op.drop_index(op.f('idx_history_action'), table_name='asset_history')
    # op.drop_index(op.f('idx_history_asset'), table_name='asset_history')
    # op.drop_index(op.f('idx_history_asset_date'), table_name='asset_history')
    # op.drop_index(op.f('idx_history_created_at'), table_name='asset_history')
    # op.drop_index(op.f('idx_assets_assigned_to'), table_name='assets')
    # op.drop_index(op.f('idx_assets_category'), table_name='assets')
    # op.drop_index(op.f('idx_assets_deleted'), table_name='assets', postgresql_where='(deleted_at IS NULL)')
    # op.drop_index(op.f('idx_assets_location'), table_name='assets')
    # op.drop_index(op.f('idx_assets_search'), table_name='assets')
    # op.drop_index(op.f('idx_assets_serial'), table_name='assets')
    # op.drop_index(op.f('idx_assets_status'), table_name='assets')
    # op.drop_index(op.f('idx_assets_tag'), table_name='assets')
    op.add_column('categories', sa.Column('parent_id', sa.String(length=36), nullable=True))
    op.add_column('categories', sa.Column('sort_order', sa.Integer(), nullable=False, server_default='0'))
    op.create_index(op.f('ix_categories_parent_id'), 'categories', ['parent_id'], unique=False)
    op.create_foreign_key(op.f('fk_categories_parent_id_categories'), 'categories', 'categories', ['parent_id'], ['id'])
    op.create_index(op.f('ix_locations_site'), 'locations', ['site'], unique=False)
    op.add_column('users', sa.Column('department_id', sa.String(length=36), nullable=True))
    op.add_column('users', sa.Column('avatar_url', sa.String(length=500), nullable=True))
    op.create_index(op.f('ix_users_department_id'), 'users', ['department_id'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_foreign_key(op.f('fk_users_department_id_departments'), 'users', 'departments', ['department_id'], ['id'])
    op.drop_column('users', 'department')
    op.alter_column('workflows', 'expected_return_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # Preserve workflow indexes created in previous migrations
    # op.drop_index(op.f('idx_workflows_asset'), table_name='workflows')
    # op.drop_index(op.f('idx_workflows_created'), table_name='workflows')
    # op.drop_index(op.f('idx_workflows_requester'), table_name='workflows')
    # op.drop_index(op.f('idx_workflows_status'), table_name='workflows')
    # op.drop_index(op.f('idx_workflows_type'), table_name='workflows')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Note: These index recreations are commented out since we preserved them in upgrade
    # op.create_index(op.f('idx_workflows_type'), 'workflows', ['type'], unique=False)
    # op.create_index(op.f('idx_workflows_status'), 'workflows', ['status'], unique=False)
    # op.create_index(op.f('idx_workflows_requester'), 'workflows', ['requester_id'], unique=False)
    # op.create_index(op.f('idx_workflows_created'), 'workflows', ['created_at'], unique=False)
    # op.create_index(op.f('idx_workflows_asset'), 'workflows', ['asset_id'], unique=False)
    op.alter_column('workflows', 'expected_return_date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               existing_nullable=True)
    op.add_column('users', sa.Column('department', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_users_department_id_departments'), 'users', type_='foreignkey')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_department_id'), table_name='users')
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'department_id')
    op.drop_index(op.f('ix_locations_site'), table_name='locations')
    op.drop_constraint(op.f('fk_categories_parent_id_categories'), 'categories', type_='foreignkey')
    op.drop_index(op.f('ix_categories_parent_id'), table_name='categories')
    op.drop_column('categories', 'sort_order')
    op.drop_column('categories', 'parent_id')

    # Note: These index recreations are commented out since we preserved them in upgrade
    # op.create_index(op.f('idx_assets_tag'), 'assets', ['asset_tag'], unique=False)
    # op.create_index(op.f('idx_assets_status'), 'assets', ['status'], unique=False)
    # op.create_index(op.f('idx_assets_serial'), 'assets', ['serial_number'], unique=False)
    # op.create_index(op.f('idx_assets_search'), 'assets', ['category_id', 'status', 'assigned_to'], unique=False)
    # op.create_index(op.f('idx_assets_location'), 'assets', ['location_id'], unique=False)
    # op.create_index(op.f('idx_assets_deleted'), 'assets', ['deleted_at'], unique=False, postgresql_where='(deleted_at IS NULL)')
    # op.create_index(op.f('idx_assets_category'), 'assets', ['category_id'], unique=False)
    # op.create_index(op.f('idx_assets_assigned_to'), 'assets', ['assigned_to'], unique=False)
    # op.create_index(op.f('idx_history_created_at'), 'asset_history', ['created_at'], unique=False)
    # op.create_index(op.f('idx_history_asset_date'), 'asset_history', ['asset_id', 'created_at'], unique=False)
    # op.create_index(op.f('idx_history_asset'), 'asset_history', ['asset_id'], unique=False)
    # op.create_index(op.f('idx_history_action'), 'asset_history', ['action'], unique=False)
    op.drop_index(op.f('ix_workflow_history_workflow_id'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_id'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_created_at'), table_name='workflow_history')
    op.drop_table('workflow_history')
    op.drop_index(op.f('ix_approvals_workflow_id'), table_name='approvals')
    op.drop_index(op.f('ix_approvals_status'), table_name='approvals')
    op.drop_index(op.f('ix_approvals_id'), table_name='approvals')
    op.drop_index(op.f('ix_approvals_approver_id'), table_name='approvals')
    op.drop_table('approvals')
    op.drop_index(op.f('ix_asset_attachments_uploaded_by'), table_name='asset_attachments')
    op.drop_index(op.f('ix_asset_attachments_id'), table_name='asset_attachments')
    op.drop_index(op.f('ix_asset_attachments_asset_id'), table_name='asset_attachments')
    op.drop_table('asset_attachments')
    op.drop_index(op.f('ix_departments_parent_id'), table_name='departments')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_index(op.f('ix_departments_code'), table_name='departments')
    op.drop_table('departments')
    # ### end Alembic commands ###
